"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Types_1 = require("./Types");
var Subscriptions = require("./Subscriptions");
function get(type, subscriptionId, semotus) {
    var subscription = Subscriptions.getSubscription(semotus, subscriptionId);
    return subscription.log[type];
}
exports.get = get;
/**
 * Gets Property change groups (non-array)
 *
 * @param subscriptionId
 * @param semotus
 */
function getPropChangeGroup(subscriptionId, semotus) {
    return get(Types_1.Change, subscriptionId, semotus);
}
exports.getPropChangeGroup = getPropChangeGroup;
/**
 * Gets Array Change Groups
 *
 * @param type
 * @param subscriptionId
 * @param semotus
 */
function getArrayChangeGroup(type, subscriptionId, semotus) {
    return get(type, subscriptionId, semotus);
}
exports.getArrayChangeGroup = getArrayChangeGroup;
/**
 * Remove a change group from a subscription
 *
 * @param type
 * @param subscriptionId unknown
 * @param semotus
 */
function remove(type, subscriptionId, semotus) {
    Subscriptions.getSubscription(semotus, subscriptionId).log[type] = {};
}
exports.remove = remove;
/**
 * Remove all change groups from a subscription with given type
 * @param type
 * @param semotus
 *
 * @private
 */
function removeAll(type, semotus) {
    for (var subscription in Subscriptions.getSubscriptions(semotus)) {
        remove(type, subscription, semotus);
    }
}
exports.removeAll = removeAll;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hhbmdlR3JvdXBzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2hlbHBlcnMvQ2hhbmdlR3JvdXBzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQTZFO0FBQzdFLCtDQUFpRDtBQUVqRCxTQUFnQixHQUFHLENBQUMsSUFBMkIsRUFBRSxjQUFjLEVBQUUsT0FBZ0I7SUFDN0UsSUFBTSxZQUFZLEdBQUcsYUFBYSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDNUUsT0FBTyxZQUFZLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFIRCxrQkFHQztBQUVEOzs7OztHQUtHO0FBQ0gsU0FBZ0Isa0JBQWtCLENBQUMsY0FBYyxFQUFFLE9BQWdCO0lBQy9ELE9BQU8sR0FBRyxDQUFDLGNBQU0sRUFBRSxjQUFjLEVBQUUsT0FBTyxDQUFnQixDQUFDO0FBQy9ELENBQUM7QUFGRCxnREFFQztBQUVEOzs7Ozs7R0FNRztBQUNILFNBQWdCLG1CQUFtQixDQUFDLElBQWdCLEVBQUUsY0FBYyxFQUFFLE9BQWdCO0lBQ2xGLE9BQU8sR0FBRyxDQUFDLElBQUksRUFBRSxjQUFjLEVBQUUsT0FBTyxDQUFlLENBQUM7QUFDNUQsQ0FBQztBQUZELGtEQUVDO0FBR0Q7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsTUFBTSxDQUFDLElBQVksRUFBRSxjQUFjLEVBQUUsT0FBZ0I7SUFDakUsYUFBYSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsY0FBYyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUMxRSxDQUFDO0FBRkQsd0JBRUM7QUFHRDs7Ozs7O0dBTUc7QUFDSCxTQUFnQixTQUFTLENBQUMsSUFBWSxFQUFFLE9BQWdCO0lBQ3BELEtBQUssSUFBTSxZQUFZLElBQUksYUFBYSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2hFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0tBQ3ZDO0FBQ0wsQ0FBQztBQUpELDhCQUlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcnJheUdyb3VwLCBBcnJheVR5cGVzLCBDaGFuZ2UsIENoYW5nZUdyb3VwLCBTZW1vdHVzfSBmcm9tICcuL1R5cGVzJztcbmltcG9ydCAqIGFzIFN1YnNjcmlwdGlvbnMgZnJvbSAnLi9TdWJzY3JpcHRpb25zJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldCh0eXBlOiAnY2hhbmdlJyB8IEFycmF5VHlwZXMsIHN1YnNjcmlwdGlvbklkLCBzZW1vdHVzOiBTZW1vdHVzKTogQ2hhbmdlR3JvdXAgfCBBcnJheUdyb3VwIHtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBTdWJzY3JpcHRpb25zLmdldFN1YnNjcmlwdGlvbihzZW1vdHVzLCBzdWJzY3JpcHRpb25JZCk7XG4gICAgcmV0dXJuIHN1YnNjcmlwdGlvbi5sb2dbdHlwZV07XG59XG5cbi8qKlxuICogR2V0cyBQcm9wZXJ0eSBjaGFuZ2UgZ3JvdXBzIChub24tYXJyYXkpXG4gKlxuICogQHBhcmFtIHN1YnNjcmlwdGlvbklkXG4gKiBAcGFyYW0gc2Vtb3R1c1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcENoYW5nZUdyb3VwKHN1YnNjcmlwdGlvbklkLCBzZW1vdHVzOiBTZW1vdHVzKTogQ2hhbmdlR3JvdXAge1xuICAgIHJldHVybiBnZXQoQ2hhbmdlLCBzdWJzY3JpcHRpb25JZCwgc2Vtb3R1cykgYXMgQ2hhbmdlR3JvdXA7XG59XG5cbi8qKlxuICogR2V0cyBBcnJheSBDaGFuZ2UgR3JvdXBzXG4gKlxuICogQHBhcmFtIHR5cGVcbiAqIEBwYXJhbSBzdWJzY3JpcHRpb25JZFxuICogQHBhcmFtIHNlbW90dXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFycmF5Q2hhbmdlR3JvdXAodHlwZTogQXJyYXlUeXBlcywgc3Vic2NyaXB0aW9uSWQsIHNlbW90dXM6IFNlbW90dXMpOiBBcnJheUdyb3VwIHtcbiAgICByZXR1cm4gZ2V0KHR5cGUsIHN1YnNjcmlwdGlvbklkLCBzZW1vdHVzKSBhcyBBcnJheUdyb3VwO1xufVxuXG5cbi8qKlxuICogUmVtb3ZlIGEgY2hhbmdlIGdyb3VwIGZyb20gYSBzdWJzY3JpcHRpb25cbiAqXG4gKiBAcGFyYW0gdHlwZVxuICogQHBhcmFtIHN1YnNjcmlwdGlvbklkIHVua25vd25cbiAqIEBwYXJhbSBzZW1vdHVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmUodHlwZTogc3RyaW5nLCBzdWJzY3JpcHRpb25JZCwgc2Vtb3R1czogU2Vtb3R1cykge1xuICAgIFN1YnNjcmlwdGlvbnMuZ2V0U3Vic2NyaXB0aW9uKHNlbW90dXMsIHN1YnNjcmlwdGlvbklkKS5sb2dbdHlwZV0gPSB7fTtcbn1cblxuXG4vKipcbiAqIFJlbW92ZSBhbGwgY2hhbmdlIGdyb3VwcyBmcm9tIGEgc3Vic2NyaXB0aW9uIHdpdGggZ2l2ZW4gdHlwZVxuICogQHBhcmFtIHR5cGVcbiAqIEBwYXJhbSBzZW1vdHVzXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUFsbCh0eXBlOiBzdHJpbmcsIHNlbW90dXM6IFNlbW90dXMpIHtcbiAgICBmb3IgKGNvbnN0IHN1YnNjcmlwdGlvbiBpbiBTdWJzY3JpcHRpb25zLmdldFN1YnNjcmlwdGlvbnMoc2Vtb3R1cykpIHtcbiAgICAgICAgcmVtb3ZlKHR5cGUsIHN1YnNjcmlwdGlvbiwgc2Vtb3R1cyk7XG4gICAgfVxufSJdfQ==